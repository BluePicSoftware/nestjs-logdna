{"version":3,"file":"logdna.options.js","sourceRoot":"/","sources":["logdna.options.ts"],"names":[],"mappings":"","sourcesContent":["import { ModuleMetadata, Type } from '@nestjs/common';\r\nimport { ConstructorOptions } from '@logdna/logger';\r\nimport { Request, Response } from 'express';\r\n\r\nexport type LogLevel = 'info' | 'error' | 'warn' | 'debug' | 'verbose' | 'http';\r\n\r\nexport interface LogDNAModuleOptions {\r\n  ingestionKey: string;\r\n  logDNAOptions: ConstructorOptions;\r\n}\r\n\r\nexport interface LogDNAOptionsFactory {\r\n  createLogDNAModuleOptions():\r\n    | Promise<LogDNAModuleOptions>\r\n    | LogDNAModuleOptions;\r\n}\r\n\r\nexport interface LogDNAModuleAsyncOptions\r\n  extends Pick<ModuleMetadata, 'imports'> {\r\n  inject?: any[];\r\n  useClass?: Type<LogDNAOptionsFactory>;\r\n  useExisting?: Type<LogDNAOptionsFactory>;\r\n  useFactory?: (\r\n    ...args: any[]\r\n  ) => Promise<LogDNAModuleOptions> | LogDNAModuleOptions;\r\n}\r\n\r\nexport interface LogDNAhttpLoggerOptions {\r\n  /**\r\n   * Function to determine if req/res should be logged.\r\n   * @default 'All req/res are logged'\r\n   */\r\n  filter?: (req: Request, res: Response) => boolean;\r\n  /**\r\n   * Function to override default log message.\r\n   * @default '[METHOD] [path] [status] [duration]'\r\n   */\r\n  messageFormat?: (req: Request, res: Response) => string;\r\n  /**\r\n   * Function to transform request object before it's added to log meta\r\n   */\r\n  reqMetaTransform?: (req: Request, defaultTransform: defaultReqTransform) => any;\r\n  /**\r\n   * Function to transform response object before it's added to log meta\r\n   */\r\n  resMetaTransform?: (res: Response, defaultTransform: defaultResTransform) => any;\r\n}\r\n\r\nexport interface defaultReqTransform {\r\n  protocol: string;\r\n  ip?: string;\r\n  path: string;\r\n  params?: Object;\r\n  method: string;\r\n  headers?: Object;\r\n  body?: Object;\r\n}\r\n\r\nexport interface defaultResTransform {\r\n  statusCode: number;\r\n  statusMessage?: string;\r\n  headers?: Object;\r\n  locals?: Object;\r\n  body?: Object;\r\n}\r\n\r\nexport interface LogDNAhttpExceptionLoggerOptions {\r\n    /**\r\n   * generate reference code which will be appended to exception message, log message and req/res log message\r\n   */\r\n    generateReference?: boolean;\r\n  /**\r\n   * Function to determine if exception should be logged\r\n   * @default 'All exceptions are logged'\r\n   */\r\n  filter?: (exception: unknown, req: Request, res: Response) => boolean;\r\n  /**\r\n   * Function to transform exception object before it's added to log meta\r\n   */\r\n  exceptionMetaTransform?: (exception: unknown, req: Request, res: Response) => any;\r\n  /**\r\n   * Function to override default log message.\r\n   * @default '[Error name]'\r\n   */\r\n  messageFormat?: (exception: unknown, req: Request, res: Response) => string;\r\n}\r\n"]}